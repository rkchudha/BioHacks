using System;
using static System.Console;
using System.IO;

namespace bioHacks
{
    class Gene
    {
        public string geneCode { get; set; }
        public string geneNumber { get; set; }
        public string HPAclass { get; set; }
        public string HPAprog { get; set; }
    }
    
    static class Program
    {
        static Gene GetGene( string GWAS, string newGeneFile, string GENEDATA ) 
        {
            Gene gene = null; 
            
            using(FileStream newGeneData  = new FileStream(newGeneFile, FileMode.OpenOrCreate, FileAccess.Write))
            using(StreamWriter writer = new StreamWriter(newGeneFile)) 
            {
                using(FileStream genesGWAS  = new FileStream(GWAS, FileMode.Open, FileAccess.Read))
                using(StreamReader readerGWAS = new StreamReader(GWAS)) 
                {
               
                    while(!readerGWAS.EndOfStream) 
                    {
                        gene = new Gene();
                        
                        string lineGWAS = readerGWAS.ReadLine();
                        string[] words = lineGWAS.Split('\t');
                        
                        gene.geneCode = words[0];
                        gene.geneNumber = words[1];
                        
                                          
                        using(FileStream genesGENEDATA  = new FileStream(GENEDATA, FileMode.Open, FileAccess.Read))
                        using(StreamReader readerGENEDATA = new StreamReader(GENEDATA)) 
                        {
                        
                            bool foundGene = false;
                            
                            
                            while( foundGene == false && !readerGENEDATA.EndOfStream )
                            {        
                                string lineGENEDATA = readerGENEDATA.ReadLine();
                                string[] wordsGENEDATA = lineGENEDATA.Split('\t');
                                
                                if(gene.geneCode == wordsGENEDATA[0] && wordsGENEDATA[0] != "sym")
                                {
                                    gene.HPAclass = wordsGENEDATA[15];
                                    gene.HPAprog = wordsGENEDATA[17];
                                    writer.WriteLine("{0, -10} {1, -60} {2, -100} {3, -100} ", gene.geneCode, gene.geneNumber, gene.HPAclass, gene.HPAprog );
                                    foundGene = true; 
                                }
                                else foundGene = false;
                            }
                        }
                        writer.WriteLine("{0, -10} {1, -60}", gene.geneCode, gene.geneNumber);
                    }
                }
            }
        return gene;
        }
    
        
        static void Main() //argument uses dotnet run number number passed in as a string ex. line number
        {
            const string GWAS = @"Chr20GWAStraits.tsv" ;  
            const string newGeneFile = @"newGeneFile.csv" ; 
            const string GENEDATA = @"Chr20GeneData.tsv";
            
 

            Gene gene = GetGene( GWAS, newGeneFile, GENEDATA);
            
           
            
        }
    }
}
